; Screencode Value Constants
; See: https://sta.c64.org/cbm64scr.html

; Chars and Keys
SCREENCODE_0 = $30
SCREENCODE_1 = $31
SCREENCODE_HASH = $23
SCREENCODE_ARROW_UP = $1E
SCREENCODE_DASH = $2D
SCREENCODE_BLANK = $20
SCREENCODE_PLUS = $2B
SCREENCODE_MINUS = $2D
SCREENCODE_PERIOD = $2E
SCREENCODE_SLASH = $2F
SCREENCODE_COLON = $3A
SCREENCODE_AT = $00
SCREENCODE_DIAMOND = $5A
SCREENCODE_A = $01
SCREENCODE_B = $02
SCREENCODE_C = $03
SCREENCODE_D = $04
SCREENCODE_E = $05
SCREENCODE_F = $06
SCREENCODE_G = $07
SCREENCODE_H = $08
SCREENCODE_I = $09
SCREENCODE_J = $0A
SCREENCODE_K = $0B
SCREENCODE_L = $0C
SCREENCODE_M = $0D
SCREENCODE_N = $0E
SCREENCODE_O = $0F
SCREENCODE_P = $10
SCREENCODE_Q = $11
SCREENCODE_R = $12
SCREENCODE_S = $13
SCREENCODE_T = $14
SCREENCODE_V = $16

; Graphics
SCREENCODE_CIRCLE_FULL = $51
SCREENCODE_CIRCLE_EMPTY = $57

; VU Meters
SCREENCODE_VU0 = $20
SCREENCODE_VU1 = $64
SCREENCODE_VU2 = $6F
SCREENCODE_VU3 = $79
SCREENCODE_VU4 = $62
SCREENCODE_VU5 = $F8
SCREENCODE_VU6 = $F7
SCREENCODE_VU7 = $E3

SCREENCODE_INV_VU0 = $20
SCREENCODE_INV_VU1 = $63
SCREENCODE_INV_VU2 = $77
SCREENCODE_INV_VU3 = $78
SCREENCODE_INV_VU4 = $E2
SCREENCODE_INV_VU5 = $F9
SCREENCODE_INV_VU6 = $EF
SCREENCODE_INV_VU7 = $E4

SCREENCODE_VU_FULL = $A0


; These are actually PETSCII not screencodes.
; Special value we will use to denote return in screencode strings
SCREENCODE_RETURN = $0D
; Next byte sets color
SCREENCODE_COLOR = $01
; Next 2 bytes set X and Y
SCREENCODE_XY = $02
; Enable/disable PETSCII alphanumeric conversion
;	0 = PETSCII conversion
; 1 = no conversion (assumes screencode values)
SCREENCODE_PRINT_MODE = $04